@page "/Admin/add-category"
@using Zavrsni.Rad.AnamarijaZron.Models;
@inject HttpClient httpClient
@inject NavigationManager navManager


<h3>Add Category</h3>
@if (IsError)
{
    <div>
        @*Oops! An error occurred. Please try again.*@
        @Constants.ErrorMessage
    </div>

}
<form @onsubmit="CategoryAdd">
    <div class="row mb-3">
        <label for="CategoryName" class="col-sm-2 col-form-label">Category Name</label>
        <div class="col-sm-10">
            <input type="text" @bind-value="category.CategoryName" class="form-control" id="CategoryName">
        </div>
    </div>
    <div class="row mb-3">
        <label for="CategoryDescription" class="col-sm-2 col-form-label">Category Description</label>
        <div class="col-sm-10">
            <input type="text" @bind-value="category.CategoryDescription" class="form-control" id="CategoryDescription">
        </div>
    </div>
    <div class="row mb-3">
        <label for="ImagePath" class="col-sm-2 col-form-label">Image Path</label>
        <div class="col-sm-10">
            <input type="url" @bind-value="category.ImagePath" class="form-control" id="ImagePath">
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-sm-10 offset-sm-2">
            <div class="form-check">
                <input class="form-check-input" @bind-value="category.IsHidden" type="checkbox" id="IsHidden">
                <label class="form-check-label" for="IsHidden">
                    Is Hidden
                </label>
            </div>
        </div>
    </div>
    <button type="submit" class="button">Add Category</button>

</form>
@code {
    private Category category = new Category();
    private bool IsError = false;
    private async Task CategoryAdd()
    {
        var result = await httpClient.PostAsJsonAsync($"{Constants.BaseUrl}/Categories", category);

        if (result.IsSuccessStatusCode)
        {
            navManager.NavigateTo("Admin/category-list");
        }
        else
        {
            IsError = true;
            StateHasChanged();
        }
    }
}